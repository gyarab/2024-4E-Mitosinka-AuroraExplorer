<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Post</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
  <script src="<%=GOOGLE_API_KEY%>&libraries=places"></script>
</head>

<body class="bg-gradient-to-b from-gray-950 via-gray-900 to-gray-950 min-h-screen">
  <div class="container mx-auto p-6  max-w-4xl">
    <div class="bg-gray-800 rounded-lg shadow-lg p-8">
      <h1 class="text-3xl font-bold mb-6 text-center text-white">Share Your Aurora Sighting</h1>

      <form id="auroraForm" action="/aurorex/add" method="POST" enctype="multipart/form-data">
        <!-- image-->
        <div class="mb-8">
          <label class="block text-white text-lg font-semibold mb-2">Upload Image</label>
          <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
            <input type="file" id="image" name="image" class="hidden" accept="image/*" required>
            <label for="image" class="cursor-pointer">
              <div class="text-gray-500">
                <svg class="mx-auto h-12 w-12 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                <span class="text-sm text-white">Click to upload or drag and drop</span>
              </div>
            </label>
          </div>
        </div>

        <!--location -->
        <div class="mb-6">
          <label class="block text-white text-lg font-semibold mb-2">Location</label>
          <input type="text" id="location-input"
            class="w-full bg-gray-800 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white"
            placeholder="Search for a location or click on the map">
        </div>

        <!-- map -->
        <div class="mb-8">
          <div id="map" class="w-full h-96 rounded-lg shadow-md"></div>
        </div>

        <input type="hidden" id="latitude" name="latitude" required>
        <input type="hidden" id="longitude" name="longitude" required>

        <!-- description -->
        <div class="mb-8">
          <label class="block text-white text-lg font-semibold mb-2">Description</label>
          <textarea id="description" name="description" rows="4"
            class="w-full bg-gray-800 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white"
            placeholder="Share your experience..."></textarea>
        </div>

        <!-- location error message -->
        <p id="errorMessage" class="text-red-500 text-sm hidden text-center mb-4"></p>

        <!-- post button -->
        <div class="text-center">
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-lg 
                           transition duration-200 ease-in-out transform hover:scale-105">
            Create Post
          </button>
        </div>
      </form>
    </div>
  </div>
  <script>

  </script>

  <script>
    let map, marker;
    let isLocationSelected = false; //global variable for checking if location is selected for error message

    //initialze map for selecting location
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 65, lng: 20 },
        zoom: 4,
        styles: [
          {
            featureType: "administrative",
            elementType: "geometry",
            stylers: [{ visibility: "simplified" }]
          },
          {
            featureType: "poi",
            stylers: [{ visibility: "off" }]
          }
        ]
      });

      const input = document.getElementById('location-input');
      const searchBox = new google.maps.places.SearchBox(input);

      //listen for map click to place marker
      map.addListener('click', (e) => {
        placeMarker(e.latLng);
      });

      //listen for search box place selection
      searchBox.addListener('places_changed', () => {
        const places = searchBox.getPlaces();
        if (places.length === 0) return;

        const place = places[0];
        if (!place.geometry || !place.geometry.location) return;

        map.setCenter(place.geometry.location);
        map.setZoom(12);
        placeMarker(place.geometry.location);
      });
    }

    //place marker
    function placeMarker(latLng) {
      if (marker) marker.setMap(null); //if marker is placed, remove previous marker

      //create a google maps marker
      marker = new google.maps.Marker({
        position: latLng,
        map: map,
        animation: google.maps.Animation.DROP
      });

      //set latitude and longitude values
      document.getElementById('latitude').value = latLng.lat();
      document.getElementById('longitude').value = latLng.lng();

      // mark location as selected and hide error message
      isLocationSelected = true;
      document.getElementById('errorMessage').classList.add('hidden');
    }

    // update file input label when file selected
    const fileInput = document.getElementById('image');
    fileInput.addEventListener('change', function (e) {
      const label = this.nextElementSibling;
      if (this.files && this.files[0]) {
        label.innerHTML = `<div class="text-green-500">
            <svg class="mx-auto h-12 w-12 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span class="text-sm">File selected: ${this.files[0].name}</span>
          </div>`;
      }
    });

    // validate location before submiting
    document.getElementById('auroraForm').addEventListener('submit', function (e) {
      const errorMessage = document.getElementById('errorMessage');
      const fileInput = document.getElementById('image');

      //reset error message 
      errorMessage.classList.add('hidden'); 
      errorMessage.textContent = '';
      
      // prevent submiting if no location selected
      if (!isLocationSelected) {
        e.preventDefault();
        errorMessage.textContent = 'Please select a location by clicking on the map or searching.';
        errorMessage.classList.remove('hidden');
        return; //return to prevent double message error
      }
      if(fileInput.files.length === 0){
        e.preventDefault();
        errorMessage.textContent = 'Please select a picture by clicking on the upload image section.';
        errorMessage.classList.remove('hidden');
      }
    });

    window.onload = initMap;
  </script>
</body>

</html>