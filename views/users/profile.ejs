<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="<%= GOOGLE_API_KEY %>"></script>
</head>
<body class="bg-gray-100">
    <%- include('../partials/header') %>

    <div class="max-w-4xl mx-auto mt-10">
        <!-- user info -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
            <h1 class="text-4xl font-bold text-blue-900"><%= user.userName %></h1>
            <div class="flex items-center space-x-4">
                <img src="<%= user.profilePicture %>" alt="Profile Picture" class="w-32 h-32 rounded-full object-cover mt-4">
                <div>
                    <p class="mt-2 text-gray-600"><span class="font-semibold">Email:</span> <%= user.email %></p>
                    <p class="mt-2 text-gray-600"><span class="font-semibold">Username:</span> <%= user.userName %></p>
                </div>
            </div>
            <div class="mt-8 flex space-x-4">
                <a href="/users/edit-profile"
                    class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition duration-300 ease-in-out">
                    Edit Profile
                </a>
                <a href="/users/logout"
                    class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition duration-300 ease-in-out">
                    Logout
                </a>
            </div>
        </div>

        <!-- Location -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
            <h2 class="text-2xl font-bold text-blue-900 mb-4">User area</h2>
            <div class="w-full h-64 bg-gray-200 rounded-lg mb-4" id="map"></div>
            <div class="flex items-center space-x-4">
                <div class="flex-grow">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Alert Radius (km)</label>
                    <input type="range" min="1" max="250" value="<%= user.alertRadius || 50 %>" 
                           class="w-full" id="radiusSlider">
                </div>
                <div class="w-16 text-center">
                    <span id="radiusValue"><%= user.alertRadius || 50 %></span> km
                </div>
            </div>
            <button id="saveLocation" class="mt-4 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition duration-300 ease-in-out">
                Save Location Preferences
            </button>
        </div>

        <!-- User Posts Section -->
        <div class="bg-white rounded-lg shadow-lg p-6">
            <h2 class="text-2xl font-bold text-blue-900 mb-4">My Posts</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <% if (typeof userPosts !== 'undefined' && userPosts.length > 0) { %>
                    <% userPosts.forEach(post => { %>
                        <div class="bg-white rounded-lg shadow-md overflow-hidden border">
                            <img src="<%= post.imageUrl %>" 
                                 alt="Aurora Post" 
                                 class="w-full h-48 object-cover cursor-pointer hover:opacity-90 transition-opacity duration-200"
                                 onclick="openModal(this.src)">
                            <div class="p-4">
                                <p class="text-gray-800 mb-2"><%= post.description %></p>
                                <p class="text-sm text-gray-600 mb-2">Posted: <%= new Date(post.timestamp).toLocaleString() %></p>
                                <div class="flex items-center mt-2">
                                    <span class="flex items-center text-blue-500 mr-4">
                                        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
                                        </svg>
                                        <%= post.likes.length %>
                                    </span>
                                    <span class="flex items-center text-gray-600">
                                        <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                                        </svg>
                                        <%= post.comments.length %>
                                    </span>
                                </div>
                                <div class="location-display text-sm text-gray-600 mt-2" 
                                     data-lat="<%= post.location.latitude %>" 
                                     data-lng="<%= post.location.longitude %>">
                                    <svg class="inline w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                                    </svg>
                                    <span class="location-text">Loading location...</span>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p class="text-gray-600 col-span-2 text-center py-8">No posts yet. Share your first aurora sighting!</p>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Image Modal -->
    <div id="imageModal" class="hidden fixed inset-0 w-full h-full bg-black/90 z-50 cursor-pointer">
        <button class="absolute top-5 right-8 text-white text-4xl font-bold hover:text-gray-300">&times;</button>
        <img id="modalImage" class="max-w-[90%] max-h-[90vh] m-auto absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-contain">
    </div>

    <script>
        // Initialize Google Map
        function initMap() {
            const defaultLocation = { 
                lat: <%= user.location?.latitude || 0 %>, 
                lng: <%= user.location?.longitude || 0 %> 
            };
            
            const map = new google.maps.Map(document.getElementById('map'), {
                zoom: 8,
                center: defaultLocation,
            });

            // Create circle for radius
            const circle = new google.maps.Circle({
                map: map,
                center: defaultLocation,
                radius: <%= user.alertRadius || 50 %> * 1000, // Convert km to meters
                fillColor: '#4299e1',
                fillOpacity: 0.2,
                strokeColor: '#4299e1',
                strokeWeight: 2,
                editable: true,
                draggable: true
            });

            // Update radius value when slider changes
            const radiusSlider = document.getElementById('radiusSlider');
            const radiusValue = document.getElementById('radiusValue');
            
            radiusSlider.addEventListener('input', function() {
                const radius = parseInt(this.value);
                radiusValue.textContent = radius;
                circle.setRadius(radius * 1000);
            });

            // Save location preferences
            document.getElementById('saveLocation').addEventListener('click', async function() {
                const center = circle.getCenter();
                const radius = circle.getRadius() / 1000; // Convert meters to km
                
                try {
                    const response = await fetch('/users/update-location', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            latitude: center.lat(),
                            longitude: center.lng(),
                            alertRadius: radius
                        })
                    });

                
                } catch (error) {
                    alert('Error saving location preferences: ' + error.message);
                }
            });
        }

        //modal
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('modalImage');
        const closeButton = modal.querySelector('button');

        function openModal(imgSrc) {
            modal.classList.remove('hidden');
            modalImg.src = imgSrc;
            document.body.classList.add('overflow-hidden');
        }

        function closeModal() {
            modal.classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
        }

        closeButton.onclick = closeModal;
        modal.onclick = function(e) {
            if (e.target === modal) {
                closeModal();
            }
        }

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });

        // location
        function geocodeLocations() {
            const geocoder = new google.maps.Geocoder();
            const locationDisplays = document.querySelectorAll('.location-display');
            
            locationDisplays.forEach(display => {
                const lat = parseFloat(display.dataset.lat);
                const lng = parseFloat(display.dataset.lng);
                const locationText = display.querySelector('.location-text');

                geocoder.geocode({ location: { lat, lng } }, (results, status) => {
                    if (status === 'OK' && results[0]) {
                        locationText.textContent = results[0].formatted_address;
                    } else {
                        locationText.textContent = `${lat.toFixed(2)}, ${lng.toFixed(2)}`;
                    }
                });
            });
        }

        window.onload = function() {
            initMap();
            geocodeLocations();
        };
    </script>
</body>
</html>